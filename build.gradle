apply plugin : "ear"

subprojects {
    apply plugin : "java"

    repositories {
        mavenCentral()
        maven { url 'http://repo.gradle.org/gradle/libs-releases-local' }
    }

    test {
        testLogging {
            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                }
            }
        }
    }
}

dependencies {
    deploy project(path: ':Web', configuration: 'archives')
    deploy project(path: ':WebService', configuration: 'archives')
}

ear {
    deploymentDescriptor {
        applicationName = "NewsBoard"
        initializeInOrder = true
        webModule("Web.war", "/NewsBoard")
        webModule("WebService.war", "/NewsBoard/WebService")
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.bmuschko:gradle-cargo-plugin:2.6"
    }
}

repositories {
    jcenter()
}

apply plugin: 'com.bmuschko.cargo-base'

dependencies {
    cargo 'org.glassfish.main.deployment:deployment-client:5.0'
    cargo 'org.codehaus.cargo:cargo-ant:1.6.8'
}
task deploy(dependsOn: ear, type:com.bmuschko.gradle.cargo.tasks.remote.CargoRedeployRemote) {
    containerId = 'glassfish5x';
    hostname = project.findProperty('host');
    username = project.findProperty('user');
    password = project.findProperty('pass');
    
    if(project.findProperty('port') != null && project.findProperty('port') != ""){
        containerProperties = ['cargo.glassfish.admin.port': project.findProperty('port')];
    }
}